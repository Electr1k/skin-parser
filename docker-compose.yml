version: '3'

services:
    backend:
        build:
            context: .
            dockerfile: docker/backend/Dockerfile
        container_name: skin-parser-backend
        volumes:
            - ./backend:/var/www/html
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
        depends_on:
            - pgsql

    nginx:
        image: nginx:1.21
        container_name: skin-parser-nginx
        volumes:
            - ./backend:/var/www/html
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "80:80"
        depends_on:
            - backend

    pgsql:
        image: postgres:13.3
        container_name: skin-parser-postgres
        environment:
            - POSTGRES_USER=${POSTGRES_USER:-postgres}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
            - POSTGRES_DB=${POSTGRES_DB:-postgres}
        volumes:
            - ./pgdata:/var/lib/postgresql/data
        ports:
            - ${POSTGRES_FORWARD_PORT:-5432}:5432
        restart: always

#    frontend:
#        build:
#            context: .
#            dockerfile: docker/frontend/Dockerfile
#        container_name: skin-parser-frontend
#        volumes:
#            - ./frontend:/app
#        command: npm run serve
#        ports:
#            - "80:80"
#        depends_on:
#            - backend

    csgofloat:
        image: step7750/csgofloat:master
        container_name: skin-parser-csgofloat
        volumes:
            - ./csgofloat/config:/config
        ports:
            - "8081:80"
            - "8443:443"
        depends_on:
            - pgsql
        restart: unless-stopped

